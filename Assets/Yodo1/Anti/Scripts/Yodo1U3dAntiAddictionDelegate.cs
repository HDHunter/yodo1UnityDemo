using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace Yodo1.AntiAddiction
{
    /// <summary>
    /// Return initialization result callback(返回初始化结果回调).
    /// </summary>
    /// <param name="result">
    ///    <see value="true">Initialization successful(初始化成功).</see>
    ///    <see value="false">Initialization failed(初始化失败).</see>
    /// </param>
    /// <param name="content">Information content when initialization fails(初始化失败时的信息内容).</param>
    public delegate void InitDelegate(bool result, string content);

    /// <summary>
    /// Callback triggered when the game is notified of the remaining time(对游戏进行剩余时间通知时触发的回调).
    /// </summary>
    /// <param name="eventAction"> 
    ///    <see value="ResumeGame">Continue game(继续游戏).</see>
    ///    <see value="ResumeGame">End game(结束游戏).</see>
    /// </param> 
    /// <param name="eventCode">
    ///    <see value="11001">Notification of playing time - minors(对于已玩时间的通知-未成年人).</see>
    ///    <see value="12001">Notice of no play period - minors(对于禁玩时段的通知-未成年人).</see>
    ///    <see value="11011">Notification of played time - visitors(对于已玩时间的通知-游客).</see>
    ///    <see value="12011">Notice of no play period - visitors(对于禁玩时段的通知-游客).</see>
    ///    <see value="50005">Events generated by third party channel SDK(第三方渠道SDK产生的事件).</see>
    /// </param>
    /// <param name="title">Notice title of game display(游戏展示的通知标题).</param>
    /// <param name="content">Notice content of game display(游戏展示的通知内容).</param>
    public delegate void TimeLimitNotifyDelegate(Yodo1U3dEventAction eventAction, int eventCode, string title,
        string content);

    /// <summary>
    /// Callback triggered when the player has disconnected to AntiAddiction-System(当玩家从防沉迷系统中断线时的回调).
    /// </summary>
    /// <param name="title">Notice title of game display(游戏展示的通知标题).</param>
    /// <param name="content">Notice content of game display(游戏展示的通知内容).</param>
    public delegate void PlayerDisconnectionDelegate(string title, string content);

    /// <summary>
    /// Real name callback(实名回调).
    /// </summary>
    /// <param name="eventAction">
    ///    <see value="ResumeGame">Continue game(继续游戏).</see>
    ///    <see value="ResumeGame">End game(结束游戏).</see>
    /// </param>
    public delegate void VerifyCertificationDelegate(Yodo1U3dEventAction eventAction);

    /// <summary>
    /// Whether the callback of consumption has been restricted(是否已限制消费的回调).
    /// </summary>
    /// <param name="isAllow">
    ///    <see value="true">Available for purchase(可购买).</see>
    ///    <see value="false">Not available for purchase(不可购买).</see>
    /// </param>
    /// <param name="content">Notice content that needs to be displayed in the game when it is not available for purchase(不可购买时的需要游戏展示的通知内容).</param>
    public delegate void VerifyPurchaseDelegate(bool isAllow, string content);

    /// <summary>
    /// online or offline behavior callback(上下线行为的回调).
    /// </summary>
    /// <param name="result">
    ///    <see value="true">successful(成功).</see>
    ///    <see value="false">failed(失败).</see>
    /// </param>
    /// <param name="content">Notice content of game display(游戏展示的通知内容).</param>
    public delegate void BehaviorResultDelegate(bool result, string content);
}